
import { div, style } from './helpers';
import Generator from './Generator';

//
// WorldMap
//
function WorldMap(world, level) {
  this.el = div(world.el, 'WorldMap');

  this.EMPTY = 0;
  this.FLOOR = 1;
  this.WALL = 2;
  this.PLAYER = 3;
  this.FRIENDLY = 4;
  this.FOOD = 5;
  this.EXIT = 6;
  this.GOLD = 7;
  this.FIRE = 8;
  this.BADDIE = 9;

  this.types = {
    0: 'Empty',
    1: 'Floor',
    2: 'Wall',
    3: 'Player',
    4: 'Friendly',
    5: 'Food',
    6: 'Exit',
    7: 'Gold',
    8: 'Fire',
    9: 'Baddie',
    // extended set
    10: 'Friendly',
    11: 'Food',
    12: 'Wall',
    13: 'Wall',
    14: 'Wall',
  };
  this.icons = {
    0: '',
    1: '🌫',
    2: '🌳',
    3: '🐇',
    4: '🐈',
    5: '🍩',
    6: '⛩',
    7: '💰',
    8: '🔥',
    9: '🕷',
    10: '🦄',
    11: '🍪',
    12: '🌲',
    13: '🌴',
    14: '🌵',
  };

  // jscs:disable requireSpaceAfterComma
  // jscs:disable maximumLineLength
  this.fields = [
    { name: 'A Link to the Past', chunkSize: 55, bgColor: '#8bc34a', field: [

      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,2,1,1,1,1,1,1,1,2,2,2,1,1,1,2,2,2],
      [2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,2],
      [2,1,1,2,1,2,1,9,1,1,1,1,1,2,1,1,2,2],
      [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1],
      [1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,1],
      [1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,1,1],
      [2,1,9,2,1,2,1,1,1,1,1,1,1,2,1,1,2,1],
      [2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,2],
      [2,2,1,1,1,1,1,1,1,2,2,2,1,1,1,2,2,2],
      [2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,6,2,2,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,1,1,1,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2],
      [2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,1],
      [1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1],
      [2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1],
      [2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2],
      [2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'Desert Time', chunkSize: 75, bgColor: 'yellow', field: [
      [13,13,13,13,13,13,13],
      [13, 3,13, 7, 1, 1,13],
      [13, 1, 1,13,13, 1, 6],
      [13, 1,13, 1, 1, 1,13],
      [13, 4, 1,10,13, 7,13],
      [13,13,13,13,13,13,13],
    ], },
    { name: 'Starter', chunkSize: 76, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2],
      [2,3,2,7,1,1,2],
      [2,1,1,2,2,1,6],
      [2,1,2,1,1,1,2],
      [2,4,1,9,2,8,2],
      [2,2,2,2,2,2,2],
    ], },
    { name: 'EMMA\'s LEVEL', chunkSize: 76, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,7,0,2],
      [2,0,0,0,0,0,0,4,0,0,0,0,0,0,0,7,0,2],
      [2,0,0,0,0,7,7,7,0,0,2,0,0,0,0,7,0,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2],
      [2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,0,2,2],
      [2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,0,2,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,4,0,0,2,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6],
      [2,0,0,0,0,7,7,7,0,0,2,0,0,0,7,7,7,2],
      [2,7,7,7,3,7,7,7,7,7,7,7,7,7,7,0,0,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'A Wild Baddie Appears!', chunkSize: 76, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2],
      [2,3,2,6,7,0,0,2],
      [2,0,9,2,2,2,0,6],
      [2,0,2,4,0,0,0,2],
      [2,0,2,2,0,2,0,2],
      [2,4,0,4,0,2,8,2],
      [2,2,2,2,2,2,2,2],
    ], },
    { name: 'EMMA', chunkSize: 47, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2],
      [2,0,2,2,2,0,2,0,4,0,2,0,2,0,4,0,2,0,0,0,2,0,0,0,2],
      [2,0,2,0,0,0,2,2,0,2,2,0,2,2,0,2,2,0,0,2,0,2,0,0,2],
      [2,0,2,7,4,0,2,0,7,0,2,8,2,0,7,0,2,0,0,2,7,2,0,0,6],
      [2,0,2,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,2,0,0,0,2,0,2],
      [2,0,2,2,2,0,2,0,4,0,2,0,2,0,4,0,2,0,2,0,4,0,2,0,2],
      [2,4,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'Open Field', bgColor: '#8bc34a', chunkSize: 47, field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,3,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,6],
      [2,0,7,2,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,2,4,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,4,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'Maze', chunkSize: 52, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,3,2,4,0,0,6,7,0,2,4,0,0,0,0,0,0,4,2,0,0,0,0,2],
      [2,0,2,0,2,2,2,2,0,0,0,2,0,2,2,2,2,0,2,0,2,2,0,2],
      [2,0,2,4,0,0,0,2,2,2,2,2,0,2,0,0,0,0,4,0,0,2,0,2],
      [2,4,2,2,2,0,2,2,0,0,0,4,0,2,0,2,2,2,2,2,2,2,0,2],
      [2,0,0,0,2,0,0,0,0,7,2,2,2,2,0,2,0,2,0,2,4,2,4,2],
      [2,4,2,0,2,0,2,0,4,2,6,0,2,0,0,2,0,2,0,4,0,2,6,2],
      [2,0,2,0,7,0,2,2,2,2,2,0,2,0,2,2,0,0,0,2,0,2,2,2],
      [2,6,2,0,0,0,0,4,0,0,0,0,2,0,4,0,0,7,0,2,0,0,0,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,2],
    ], },
    { name: 'Bigger Maze', chunkSize: 47, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,6,2,4,0,4,6,2,6,2,4,0,0,4,0,0,0,4,2,0,0,0,4,0,2,8,6],
      [2,0,2,0,2,2,2,2,0,0,0,2,0,2,2,2,2,0,2,0,2,2,0,2,2,0,2],
      [2,0,2,4,0,0,0,7,2,2,2,2,0,2,0,0,0,0,4,0,0,2,0,7,2,0,2],
      [2,4,2,2,2,0,2,2,0,0,0,4,0,2,0,2,2,2,2,2,2,4,0,6,2,0,2],
      [2,0,0,0,2,0,0,0,0,2,2,2,2,7,0,2,6,2,0,2,4,2,4,2,2,0,2],
      [2,4,2,0,2,0,2,0,4,2,6,0,2,0,0,2,0,2,0,4,0,2,0,0,0,0,2],
      [2,0,2,0,2,0,2,2,2,2,2,0,2,0,2,2,0,0,0,2,0,2,2,2,2,7,2],
      [2,0,2,0,0,0,0,4,0,4,0,0,2,0,4,7,0,2,0,2,0,2,4,6,2,4,2],
      [2,0,7,0,0,2,0,0,7,0,0,0,2,0,0,0,0,2,0,2,0,0,0,7,2,0,2],
      [2,3,2,0,2,2,2,2,2,0,7,0,2,0,2,2,0,2,0,2,2,2,0,2,2,0,2],
      [2,0,2,0,0,0,4,0,2,8,4,0,2,0,4,2,0,4,0,0,6,2,0,0,0,4,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'Pacman', chunkSize: 46, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,6,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,6,2],
      [2,0,2,2,2,0,2,2,2,0,7,0,2,2,2,0,2,2,2,0,2],
      [2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,2],
      [2,0,2,2,2,0,2,0,2,2,2,2,2,0,2,0,2,2,2,0,2],
      [2,0,0,0,0,0,2,4,0,0,2,0,0,4,2,0,0,0,0,0,2],
      [2,2,2,2,2,0,2,2,2,0,7,0,2,2,2,0,2,2,2,2,2],
      [0,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0],
      [2,2,2,2,2,0,2,0,2,2,0,2,2,0,2,0,2,2,2,2,2],
      [2,3,0,0,0,0,0,0,2,4,8,4,2,0,0,0,0,0,0,0,6],
      [2,0,0,0,0,0,2,0,2,4,8,4,2,0,2,0,0,0,0,0,2],
      [2,2,2,2,2,0,2,0,2,2,0,2,2,0,2,0,2,2,2,2,2],
      [0,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0],
      [2,2,2,2,2,0,2,0,2,2,2,2,2,0,2,0,2,2,2,2,2],
      [2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,2,2,0,2,2,2,0,7,0,2,2,2,0,2,2,0,0,2],
      [2,0,0,4,2,4,0,0,0,0,0,0,0,0,0,4,2,4,0,0,2],
      [2,2,2,0,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,2,2],
      [2,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,2],
      [2,0,2,2,2,2,2,2,2,0,7,0,2,2,2,2,2,2,2,0,2],
      [2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
    ], },
    { name: 'BIG Field', chunkSize: 40, bgColor: '#8bc34a', field: [
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],
      [2,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,2],
      [2,0,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,2],
      [2,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
      [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,2,2,2],
    ], },
  ];

  // jscs:enable requireSpaceAfterComma
  // jscs:enable maximumLineLength

  this.levels = this.fields.length;
  this.setLevel(level);

  this.iconsByType = {};
  Object.keys(this.types).forEach((key) => {
    this.iconsByType[this.types[key]] = this.icons[key];
  });

  this.typesMap = new Array(this.height);
  this.iconsMap = new Array(this.height);
  this.field.forEach((row, r) => {
    this.typesMap[r] = [];
    this.iconsMap[r] = [];
    row.forEach((col, c) => {
      this.typesMap[r][c] = this.types[col];
      this.iconsMap[r][c] = this.icons[col];
    });
  });
};

WorldMap.prototype.setLevel = function (level) {
  let map = this.fields[level - 1];
  this.field = map.field;
  // this.field = this.generate();
  this.chunkSize = map.chunkSize;
  this.name = map.name;
  this.width = this.field[0].length;
  this.height = this.field.length;
  this.bgColor = map.bgColor;
  style(this.el, {
    backgroundColor: this.bgColor,
  });
};

WorldMap.prototype.getIconByType = function (type) {
  return this.iconsByType[type];
};

WorldMap.prototype.generate = function (type) {
  Generator.Generate();
  Generator.PlaceInRoom(0, this.PLAYER);
  Generator.PlaceInRoom(Generator.LastRoom(), this.EXIT);
  let map = Generator.map;
  // this.placePlayer(map);
  console.log(Generator)
  return map;
};

WorldMap.prototype.placePlayer = function (map) {
  for (let r in map) {
    if (!map.hasOwnProperty(r)) continue;
    for (let c in map[r]) {
      if (!map[r].hasOwnProperty(c)) continue;
      if (map[r][c] === 1) {
        map[r][c] = this.PLAYER;
        return map;
      }
    };
  };

  return map;
};

WorldMap.prototype.store = function (level) {
  // TODO sparse matrix
  // var compressed = numeric.ccsSparse(this.fields[level-1].field);
  return;
};

module.exports = WorldMap;
